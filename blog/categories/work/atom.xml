<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Work | Janrone's Blog]]></title>
  <link href="http://janrone.github.com/blog/categories/work/atom.xml" rel="self"/>
  <link href="http://janrone.github.com/"/>
  <updated>2014-04-09T15:30:01+08:00</updated>
  <id>http://janrone.github.com/</id>
  <author>
    <name><![CDATA[Janrone]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Anroid应用自动打包]]></title>
    <link href="http://janrone.github.com/blog/2013/05/23/anroidying-yong-zi-dong-da-bao/"/>
    <updated>2013-05-23T20:37:00+08:00</updated>
    <id>http://janrone.github.com/blog/2013/05/23/anroidying-yong-zi-dong-da-bao</id>
    <content type="html"><![CDATA[<h3>1.创建一个Android项</h3>

<pre><code>android create project -k com.android.hello -a hello -t 1 -p ~/Download/Hello 

结果：
Created project directory: /Users/povol/Download/Hello
Created directory /Users/povol/Download/Hello/src/com/android/hello
Added file /Users/povol/Download/Hello/src/com/android/hello/hello.java
Created directory /Users/povol/Download/Hello/res
Created directory /Users/povol/Download/Hello/bin
Created directory /Users/povol/Download/Hello/libs
Created directory /Users/povol/Download/Hello/res/values
Added file /Users/povol/Download/Hello/res/values/strings.xml
Created directory /Users/povol/Download/Hello/res/layout
Added file /Users/povol/Download/Hello/res/layout/main.xml
Added file /Users/povol/Download/Hello/AndroidManifest.xml
Added file /Users/povol/Download/Hello/build.xml
Added file /Users/povol/Download/Hello/proguard-project.txt
</code></pre>

<p>参数说明：-k /--package 为命名空间（包名）-a /--name 工程名  -t 为目标平台的版本编号 -p /--path 项目路径</p>

<p>列出 -t：target id，可以如命令：android list targets , Hello项目使用得id为1。</p>

<pre><code>    Available Android targets:
----------
id: 1 or "android-8"
     Name: Android 2.2
    Type: Platform
    API level: 8
    Revision: 3
    Skins: HVGA, QVGA, WQVGA400, WQVGA432, WVGA800 (default), WVGA854
    ABIs : armeabi
----------
id: 2 or "Google Inc.:Google APIs:8"
    Name: Google APIs
    Type: Add-On
    Vendor: Google Inc.
    Revision: 2
    Description: Android + Google APIs
    Based on Android 2.2 (API level 8)
    Libraries:
    * com.google.android.maps (maps.jar)
        API for Google Maps
    Skins: WVGA854, WQVGA400, HVGA, WQVGA432, WVGA800 (default), QVGA
    ABIs : armeabi
----------
</code></pre>

<!--more-->


<p></p>

<h3>2.已有项目更新</h3>

<p>对已经存在的Android工程,可以update下（修改平台的版本）,这样会自动添加build.xml 等ant 的配置文件</p>

<pre><code>android update project -n Hello -t 2 -p ~/Download/Hello
</code></pre>

<p>参数说明：－n 项目名称  －t target id －p 项目路径</p>

<h5>以上命令你要在android sdk tools的目录下。</h5>

<h3>3.配置 ant.properties</h3>

<pre><code>key.store=hello.keystroe
key.store.password=helloworld
key.alias=hello.keystroe
key.alias.password=helloworld
</code></pre>

<p>要发布Adnroid应用，需要给apk签名，前提需要是有keystore，在这使用命令生产，你也可以用其他方式。</p>

<h3>4.生产keystore</h3>

<p>需要用得keytool，这个安装完了java sdk 就会有的。</p>

<pre><code>povolmatoMacBook-Pro:Hello povol$ keytool -genkey -alias hello.keystore -keyalg RSA -   validity 25 -keystore hello.keystroe
Enter keystore password:  
Re-enter new password: 
What is your first and last name?
[Unknown]:  hello world
What is the name of your organizational unit?
[Unknown]:  hello world
What is the name of your organization?
[Unknown]:  hello world
What is the name of your City or Locality?
[Unknown]:  cn
What is the name of your State or Province?
[Unknown]:  bj
What is the two-letter country code for this unit?
[Unknown]:  cn
Is CN=hello world, OU=hello world, O=hello world, L=cn, ST=bj, C=cn correct?
[no]:  Y

Enter key password for &lt;hello.keystore&gt;
(RETURN if same as keystore password):  
Re-enter new password: 
povolmatoMacBook-Pro:Hello povol$ 
</code></pre>

<p>在Hello目录下生成了 hello.keystroe 。<br/>
<img src="/images/post/2013-05-23-20-21-56.png" alt="" /></p>

<h3>5.编译</h3>

<pre><code>ant relase

povolmatoMacBook-Pro:Hello povol$ ant release
Buildfile: /Users/povol/Download/Hello/build.xml

-set-mode-check:

-set-release-mode:

-release-obfuscation-check:
    [echo] proguard.config is ${proguard.config}

-pre-build:

-check-env:
[checkenv] Android SDK Tools Revision 21.1.0
[checkenv] Installed at /Users/povol/myapp/android-sdk-macosx

-setup:
    [echo] Project Name: Hello
[gettype] Project Type: Application

-build-setup:
    [echo] Resolving Build Target for Hello...
[gettarget] Project Target:   Google APIs
[gettarget] Vendor:           Google Inc.
[gettarget] Platform Version: 2.2
[gettarget] API level:        8
[gettarget] WARNING: No minSdkVersion value set. Application will install on all Android    versions.
    [echo] ----------
    [echo] Creating output directories if needed...
    [mkdir] Created dir: /Users/povol/Download/Hello/bin
    [mkdir] Created dir: /Users/povol/Download/Hello/bin/res
    [mkdir] Created dir: /Users/povol/Download/Hello/gen
    [mkdir] Created dir: /Users/povol/Download/Hello/bin/classes
    [mkdir] Created dir: /Users/povol/Download/Hello/bin/dexedLibs
    [echo] ----------
    [echo] Resolving Dependencies for Hello...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
[dependency] API&lt;=15: Adding annotations.jar to the classpath.
    [echo] ----------
    [echo] Building Libraries with 'release'...
[subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] Merging AndroidManifest files into one.
[mergemanifest] Manifest merger disabled. Using project manifest only.
    [echo] Handling aidl files...
    [aidl] No AIDL files to compile.
    [echo] ----------
    [echo] Handling RenderScript files...
[renderscript] No RenderScript files to compile.
    [echo] ----------
    [echo] Handling Resources...
    [aapt] Generating resource IDs...
    [echo] ----------
    [echo] Handling BuildConfig class...
[buildconfig] Generating BuildConfig class.

-pre-compile:

-compile:
    [javac] Compiling 3 source files to /Users/povol/Download/Hello/bin/classes

-post-compile:

-obfuscate:

-dex:
    [dex] input: /Users/povol/Download/Hello/bin/classes
    [dex] input: /Users/povol/myapp/android-sdk-macosx/tools/support/annotations.jar
    [dex] Pre-Dexing /Users/povol/myapp/android-sdk-macosx/tools/support/annotations.jar -&gt; annotations-18bac9ff24ac0be23db54c4d77951e76.jar
    [dex] Converting compiled files and external libraries into /Users/povol/Download/Hello/bin/classes.dex...
    [dx] Merged dex A (6 defs/1.8KiB) with dex B (2 defs/1.1KiB). Result is 8 defs/2.8KiB. Took 0.0s

-crunch:
[crunch] Crunching PNG Files in source dir: /Users/povol/Download/Hello/res
[crunch] To destination dir: /Users/povol/Download/Hello/bin/res
[crunch] Crunched 0 PNG files to update cache

-package-resources:
 [aapt] Creating full resource package...

-package:
[apkbuilder] Current build type is different than previous build: forced apkbuilder run.
[apkbuilder] Creating Hello-release-unsigned.apk for release...

-post-package:

-release-prompt-for-password:

-release-nosign:

-release-sign:
    [echo] Signing final apk...
[zipalign] Running zip align on final apk...
    [echo] Release Package: /Users/povol/Download/Hello/bin/Hello-release.apk
[propertyfile] Creating new property file: /Users/povol/Download/Hello/bin/build.prop
[propertyfile] Updating property file: /Users/povol/Download/Hello/bin/build.prop
[propertyfile] Updating property file: /Users/povol/Download/Hello/bin/build.prop
[propertyfile] Updating property file: /Users/povol/Download/Hello/bin/build.prop

-post-build:

release:

BUILD SUCCESSFUL
Total time: 4 seconds
povolmatoMacBook-Pro:Hello povol$ 
</code></pre>

<p>至此，编译成功。</p>

<p><img src="/images/post/2013-05-23-20-21-55.png" alt="" /></p>

<h3>6.安装运行</h3>

<p>结果：<br/>
 <img src="/images/post/2013-05-23-20-21-57.png" alt="" /></p>

<h4>签名参考 Signing Your Applications  <a href="http://developer.android.com/tools/publishing/app-signing.html">http://developer.android.com/tools/publishing/app-signing.html</a></h4>

<h4>附：keytool用法：</h4>

<pre><code>  -certreq     [-v] [-protected]
               [-alias &lt;别名&gt;] [-sigalg &lt;sigalg&gt;]
               [-file &lt;csr_file&gt;] [-keypass &lt;密钥库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -changealias [-v] [-protected] -alias &lt;别名&gt; -destalias &lt;目标别名&gt;
               [-keypass &lt;密钥库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -delete      [-v] [-protected] -alias &lt;别名&gt;
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -exportcert  [-v] [-rfc] [-protected]
               [-alias &lt;别名&gt;] [-file &lt;认证文件&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -genkeypair  [-v] [-protected]
               [-alias &lt;别名&gt;]
               [-keyalg &lt;keyalg&gt;] [-keysize &lt;密钥大小&gt;]
               [-sigalg &lt;sigalg&gt;] [-dname &lt;dname&gt;]
               [-validity &lt;valDays&gt;] [-keypass &lt;密钥库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -genseckey   [-v] [-protected]
               [-alias &lt;别名&gt;] [-keypass &lt;密钥库口令&gt;]
               [-keyalg &lt;keyalg&gt;] [-keysize &lt;密钥大小&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -help

  -importcert  [-v] [-noprompt] [-trustcacerts] [-protected]
               [-alias &lt;别名&gt;]
               [-file &lt;认证文件&gt;] [-keypass &lt;密钥库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -importkeystore [-v]
               [-srckeystore &lt;源密钥库&gt;] [-destkeystore &lt;目标密钥库&gt;]
               [-srcstoretype &lt;源存储类型&gt;] [-deststoretype &lt;目标存储类型&gt;]
               [-srcstorepass &lt;源存储库口令&gt;] [-deststorepass &lt;目标存储库口令&gt;]
               [-srcprotected] [-destprotected]
               [-srcprovidername &lt;源提供方名称&gt;]
               [-destprovidername &lt;目标提供方名称&gt;]
               [-srcalias &lt;源别名&gt; [-destalias &lt;目标别名&gt;]
                 [-srckeypass &lt;源密钥库口令&gt;] [-destkeypass &lt;目标密钥库口令&gt;]]
               [-noprompt]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -keypasswd   [-v] [-alias &lt;别名&gt;]
               [-keypass &lt;旧密钥库口令&gt;] [-new &lt;新密钥库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -list        [-v | -rfc] [-protected]
               [-alias &lt;别名&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]

  -printcert   [-v] [-file &lt;认证文件&gt;]

  -storepasswd [-v] [-new &lt;新存储库口令&gt;]
               [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]
               [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]
               [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...
               [-providerpath &lt;路径列表&gt;]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS x下载和编译Android 4.2.2 源码]]></title>
    <link href="http://janrone.github.com/blog/2013/04/08/mac-os-xxia-zai-he-bian-yi-android-4-dot-2-2-yuan-ma/"/>
    <updated>2013-04-08T15:56:00+08:00</updated>
    <id>http://janrone.github.com/blog/2013/04/08/mac-os-xxia-zai-he-bian-yi-android-4-dot-2-2-yuan-ma</id>
    <content type="html"><![CDATA[<h3>创建一个映像用来下载android源码</h3>

<p>1, $ hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 40g ~/android.sparseimage</p>

<p>2, $ hdiutil attach ~/android.sparseimage -mountpoint /Volumes/android</p>

<p>3,  $ mkdir ~/bin</p>

<p>4,  $ PATH=~/bin:$PATH</p>

<p>5,  $ curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo</p>

<p>6,  $ chmod a+x ~/bin/repo</p>

<p>7,  $ cd /Volumes/android/</p>

<p>8,  $ mkdir WORKING_DIRECTORY</p>

<p>9,  $ CD WORKING_DIRECTORY/</p>

<p>10, $ repo init -u https://android.googlesource.com/platform/manifest -b android-4.2.2_r1</p>

<p>11, $repo sync</p>

<!-- more -->


<h3>设置必要的编译环境初始化编译环境：</h3>

<p>1, $source build/envsetup.sh</p>

<p>2, 选择编译目标 $lunch full-eng</p>

<h3>开始编译代码</h3>

<p>$make -j8</p>

<p>开始时间 2013－03-28 19:17 <br/>
编译到了 40分钟左右的时候出现了错误 No space left on device，看错误3解决方法。<br/>
之后接着编译 make 这次没有是用 －j,因为心疼电脑，嘿嘿 ，大概半小时编译完成。</p>

<p>nstalled file list: out/target/product/generic/installed-files.txt<br/>
Target system fs image: out/target/product/generic/obj/PACKAGING/systemimage_intermediates/system.img<br/>
Running:  mkyaffs2image -f out/target/product/generic/system out/target/product/generic/obj/PACKAGING/systemimage_intermediates/system.img<br/>
Install system fs image: out/target/product/generic/system.img</p>

<p>编译完成后运行：emulator -kernel ./prebuilts/qemu-kernel/arm/kernel-qemu -sysdir ./out/target/product/generic -system system.img -data userdata.img -ramdisk ramdisk.img</p>

<p>出现错误 qemu: could not load initrd 'ramdisk.img'，看错误4解决方法</p>

<p>直接运行：
emulator -kernel ./prebuilts/qemu-kernel/arm/kernel-qemu-armv7 -sysdir ./out/target/product/generic/ -system system.img -data userdata.img</p>

<h2>最终结果图 ：</h2>

<p><img src="/images/post/2013-04-08-01.png" alt="" /></p>

<hr />

<h3>错误 1</h3>

<p>在android4.0源码中，mm编译apk时出现下面的错误：</p>

<pre><code>make: *** No rule to make target `out/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/javalib.jar', needed by `out/target/common/obj/APPS/NativeTimer_intermediates/classes-full-debug.jar'.  Stop.
</code></pre>

<p>解决方法：
在源码根目录执行：
make clobber
make -j8</p>

<p>这个错误的好像是由于在make一个任务时，并没有结束，这时在进行make就会报
make clobber的功能是把上一次make命令生成的文件或目录清除掉，效果比make clean更严格。
这样编译完成后，在编译apk就可以了。</p>

<hr />

<h3>错误2</h3>

<p>povolmatoMacBook-Pro:untitled povol$ source build/envsetup.sh<br/>
including device/asus/grouper/vendorsetup.sh<br/>
including device/asus/tilapia/vendorsetup.sh<br/>
including device/generic/armv7-a-neon/vendorsetup.sh<br/>
including device/generic/armv7-a/vendorsetup.sh<br/>
including device/generic/mips/vendorsetup.sh<br/>
including device/generic/x86/vendorsetup.sh<br/>
including device/lge/mako/vendorsetup.sh<br/>
including device/samsung/maguro/vendorsetup.sh<br/>
including device/samsung/manta/vendorsetup.sh<br/>
including device/samsung/toro/vendorsetup.sh<br/>
including device/samsung/toroplus/vendorsetup.sh<br/>
including device/ti/panda/vendorsetup.sh<br/>
including sdk/bash_completion/adb.bash</p>

<pre><code>povolmatoMacBook-Pro:untitled povol$ lunch full-eng
build/core/combo/HOST_darwin-x86.mk:62: *****************************************************
build/core/combo/HOST_darwin-x86.mk:63: * Cannot find SDK 10.6 at /Applications/Xcode.app/
Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.6.sdk
build/core/combo/HOST_darwin-x86.mk:65: * If you wish to build using higher version of SDK, 
build/core/combo/HOST_darwin-x86.mk:66: * try setting BUILD_MAC_SDK_EXPERIMENTAL=1 before 
build/core/combo/HOST_darwin-x86.mk:67: * rerunning this command 
build/core/combo/HOST_darwin-x86.mk:69: *****************************************************
build/core/combo/HOST_darwin-x86.mk:70: *** Stop..  Stop.

** Don't have a product spec for: 'full'
** Do you have the right repo manifest?


//**//找不到mac os x sdk 10.6 执行 
povolmatoMacBook-Pro:untitled povol$ export BUILD_MAC_SDK_EXPERIMENTAL=1

povolmatoMacBook-Pro:untitled povol$ lunch full-eng

一些初始化信息

============================================
PLATFORM_VERSION_CODENAME=REL
PLATFORM_VERSION=4.2.2
TARGET_PRODUCT=full
TARGET_BUILD_VARIANT=eng
TARGET_BUILD_TYPE=release
TARGET_BUILD_APPS=
TARGET_ARCH=arm
TARGET_ARCH_VARIANT=armv7-a
HOST_ARCH=x86
HOST_OS=darwin
HOST_OS_EXTRA=Darwin-12.3.0-x86_64-i386-64bit
HOST_BUILD_TYPE=release
BUILD_ID=JDQ39
OUT_DIR=out
</code></pre>

<p>============================================</p>

<p>povolmatoMacBook-Pro:untitled povol$</p>

<p>========================================================</p>

<h3>错误3</h3>

<pre><code>/Volumes/untitled/prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.6/bin/../lib/gcc/arm-linux-androideabi/4.6.x-google/../../../../arm-linux-androideabi/bin/ld: fatal error: out/target/product/generic/obj/SHARED_LIBRARIES/libmock_ril_intermediates/LINKED/libmock_ril.so: No space left on device
collect2: ld returned 1 exit status
make: *** [out/target/product/generic/obj/SHARED_LIBRARIES/libmock_ril_intermediates/LINKED/libmock_ril.so] Error 1
make: *** Waiting for unfinished jobs....
/Volumes/untitled/prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.6/bin/../lib/gcc/arm-linux-androideabi/4.6.x-google/../../../../arm-linux-androideabi/bin/ld: warning: hidden symbol 'mkstemp' in out/target/product/generic/obj/SHARED_LIBRARIES/libchromium_net_intermediates/base/file_util_android.o is referenced by DSO out/target/product/generic/obj/lib/libcutils.so
/Volumes/untitled/prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.6/bin/../lib/gcc/arm-linux-androideabi/4.6.x-google/../../../../arm-linux-androideabi/bin/ld: fatal error: out/target/product/generic/obj/SHARED_LIBRARIES/libchromium_net_intermediates/LINKED/libchromium_net.so: No space left on device
collect2: ld returned 1 exit status
make: *** [out/target/product/generic/obj/SHARED_LIBRARIES/libchromium_net_intermediates/LINKED/libchromium_net.so] Error 1
/Volumes/untitled/prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.6/bin/../lib/gcc/arm-linux-androideabi/4.6.x-google/../../../../arm-linux-androideabi/bin/ld: fatal error: out/target/product/generic/obj/SHARED_LIBRARIES/libbcc_intermediates/LINKED/libbcc.so: No space left on device
collect2: ld returned 1 exit status
make: *** [out/target/product/generic/obj/SHARED_LIBRARIES/libbcc_intermediates/LINKED/libbcc.so] Error 1
</code></pre>

<p>解决：</p>

<p>执行 df －li 查看 iused  我的在untitled 显示100%</p>

<pre><code>povolmatoMacBook-Pro:untitled povol$ df -li 
Filesystem   512-blocks      Used Available Capacity  iused    ifree %iused  Mounted on
/dev/disk0s2  777343744 450761888 326069856    59% 56409234 40758732   58%   /
/dev/disk0s4  197748728  82422896 115325832    42%   183830 57683118    0%   /Volumes/BOOTCAMP
/dev/disk1      8388608   1611096   6777512    20%   201385   847189   19%   /Volumes/RamDisk

/dev/disk3s2   83214256  83193528     20728   100% 10399189     2591  100%   /Volumes/untitled
</code></pre>

<p>所以提示 No space left on device</p>

<p>重新启动了mac之后</p>

<pre><code>povolmatoMacBook-Pro:android povol$ df -li 
Filesystem   512-blocks      Used Available Capacity  iused    ifree %iused  Mounted on
/dev/disk0s2  777343744 482859288 293972456    63% 60421409 36746557   62%   /

/dev/disk0s4  197748728  82422896 115325832    42%   183830 57683118    0%   /Volumes/BOOTCAMP

/dev/disk1      8388608     73632   8314976     1%     9202  1039372    1%   /Volumes/RamDisk

/dev/disk3s2   83214256  50383960  32830296    61%  6297993  4103787   61%   /Volumes/untitled
</code></pre>

<p>这次显示／Volumes/untitled iused 为61% 接着运行 make
编译成功 。</p>

<p> <br/></p>

<hr />

<h3>错误 4</h3>

<p>qemu: could not load initrd 'ramdisk.img'，</p>

<p>直接参数-ramdisk ramdisk.img去掉，结果模拟器跑起来了，是运行出窗口后，就是黑屏。</p>

<p>换下kernel，用./prebuilts/qemu-kernel/arm/kernel-qemu-armv7，之后运行成功 。</p>

<br/><br/><br/>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么搭建 Octopress 在 github ! ]]></title>
    <link href="http://janrone.github.com/blog/2013/01/12/zen-yao-da-jian-octopress-zai-github/"/>
    <updated>2013-01-12T20:34:00+08:00</updated>
    <id>http://janrone.github.com/blog/2013/01/12/zen-yao-da-jian-octopress-zai-github</id>
    <content type="html"><![CDATA[<h3>git 和 github 配置</h3>

<h6>1.先注册一个github账号， 创建github pages 。</h6>

<p>创建一个新的Repository。这里须要重视的是，若是想要博客的首页是http://yourname.github.com，则Repository的project name就必须是yourname.github.com。</p>

<p>安装Git并进行设置，mac下git默认已经装好 。</p>

<h6>2.接下来设置 SH Keys  .</h6>

<p>履行ssh-keygen -t rsa -C "your_email＠youremail.com"，回车。</p>

<p>然后输入两遍暗码。</p>

<!-- more -->


<p>到c:\Users\用户名.ssh\目次找到id_rsa.pub，并用文本软件打开复制全部。目录是隐藏的。</p>

<h5>3.将SSH Key添加到GitHub</h5>

<p>到github网站选择“Account Settings”>>“SSH Public Keys”>>“Add another public key”，将刚才复制的内容粘贴到key文本框内。</p>

<h5>4. 测试</h5>

<p>为确保设置成功，现在可以测试设置成果啦。记住，"git@github.com"是默认的，无需修改。</p>

<pre><code>    $ ssh -T git@github.com  （也可以用 SSH -v git@github.com ）
</code></pre>

<h5>5.设置个人信息</h5>

<p>现在，你已经成功安装Git，并设置好SSH Keys，是设置个人信息的时候啦：</p>

<p>设置用户名和电子邮件</p>

<pre><code>    $ git config --global user.name "Firstname Lastname"
    $ git config --global user.email "youremail@youremail.com"
</code></pre>

<h3>安装ruby 1.9.3 版本 ，因为目前2.0 Octopress 需要的真是 1.9.3 ,否则到后边rake install 不会有问题的。</h3>

<p>mac 本身的版本比这个低。 <a href="http://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/">id</a>:http://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/ "安装可以参看这篇文章。"</p>

<h3>Octopress安装和配置</h3>

<h5>1.安装Octopress</h5>

<p>建立一个放置Octopress的目录，这里是oblog文件夹，clone octopress程序到本地,替换username为你的自定义名称</p>

<pre><code>    cd ~/oblog/
    git clone git://github.com/imathis/octopress.git username.github.com
    cd ~/oblog/username.github.com
    gem install bundler
    bundle install
</code></pre>

<p>接下来</p>

<pre><code>    rake setup_github_pages    //配置github项目地址 接下来会提示输入url
    Enter the read/write url for your repository  
    (For example, 'git@github.com:your_username/your_username.github.com)

    rake install    //是安装Octopress默认主题的
    rake new_post["Hello World"]   //建立新文章，文章存放在source/_post里面，格式为md的，现在就找个爽快点的[编辑器](#editor)来写文章了

    rake generate  //生成静态文件
    rake preview  //开启站点预览，动态生成， http://127.0.0.1:4000
    rake deploy  //生成静态并部署到github
    选择性的备份source文件夹到github，这样就有了文章md源文件的版本管理
</code></pre>

<p>提交的代码到git库
git add .
git commit -m "your message log 例：保存source文件夹，文章源文件"
git push origin source   //建立sourch分支并保存</p>

<p>以后写文章就只需要用
rake generate
rake deploy</p>

<h5>2.Ocotpress博客配置</h5>

<p>更改下面的配置后，还需要运行 rake generate、rake deploy等等命令的。</p>

<p>1、默认的博客运行成功的话，就需要按照自己的要求对博客配置进行修改了，主要是修改Octopress根目录下的主配置文件_config.yml。</p>

<pre><code>    url:  http://username.github.com                      博客地址
    title:  username's blog                               博客标题
    subtitle: A blogging framework for hackers.           副标题
    author:  xhhjin                                       作者
    simple_search:  http://www.google.com.hk/search       搜索引擎
    description:                                          关于博客的描述
    subscribe_rss:  /atom.xml                             Rss订阅地址, 默认是  /atom.xml
    subscribe_email:                                      提供Email订阅的地址
    email:                                                Rss订阅的Email地址
    root:/                                                博客路径，默认是"/"，如果你打算在子目录中，记得修改这个路径
    permalink: /blog/:year/:month/:day/:title/            文章的固定链接形式
</code></pre>

<p>2.Jekyll &amp; Plugins</p>

<pre><code>    paginate: 10                    # 每页的文章数量，超过翻页
    recent_posts: 5                 # 右侧“最近发表”的模块里显示的文章数量
    excerpt_link: "Read on &amp;rarr;"  # 在文章中使用&lt;!-- more --&gt;,列表页将不再显示全文，而是显示“Read on”的链接，指向全文
    default_asides: [asides/recent_posts.html, asides/github.html, asides/twitter.html]    # 用于配置侧边栏
</code></pre>

<h4>呵呵，我的第一篇博文算是写完了，希望和大家多交流，互相学习。</h4>

<h3>我安装过程中碰到的问题。</h3>

<p>操作如果没有响应 ，有的是需要翻墙的 . 而且需要sudo权限 .
使用bundle 之前需要安装 gem install liquid
如果出错看提示，根据提示跟新 我在装  liquid 的时候就需要更新这个 gem update --system
之后在安装 liquid .
之后就可以使用 bundle 了 .
留意bundle update 提示使用的 rake  和 安装 rake 版本是否一致。不然会出错。（卸载不一样的版本 gem uninstall rake -v=10.0.3）</p>

<p>或者 在终端提示You have already activated rake 10.0.2, but your Gemfile requires rake 0.9.2.2. Using bundle exec may solve this.，解决办法，找到Gemfile文件，修改gem rake对应那行为10.0.2即可。  我用的以上的方法。</p>

<p>Fetching gem metadata from http://rubygems.org/........
Fetching gem metadata from http://rubygems.org/..
Installing rake (0.9.6)</p>

<p>使用rake 命令遇到问题：
C:\ruby186\workspace>rake db:migrate
rake aborted!
No Rakefile found (looking for: rakefile, Rakefile, rakefile.rb, Rakefile.rb)
c:/ruby186/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2377:in `raw_load_rakef
ile'
(See full trace by running task with --trace)
原因：没有进入工程目录。</p>

<p>github page博客搭建参考在github上用octopress搭建博客，关于ruby的安装可参考Ruby在windows下的安装 。下面是自己安装过程中碰到的几个错误，分享下：<br/>
(1) ruby安装目录不能包含空格，否则在某些gem install会报错<br/>
(2) rake setup_github_pages 提示：window No such file or directory – git remote -v
这是因为windows 的cmd没有配置git路径，只要在环境变量path中加入git的bin目录即可<br/>
(3) invalid byte sequence in GBK rake setup_github_pages
这是因为本机windows的cmd默认为gbk，运行命令set LC_ALL=en_US.UTF-8 set LANG=en_US.UTF-8先<br/>
(4) rake deploy 提示## Deploying website via Rsync FAILED rake deploy
没有先rake setup_github_pages</p>
]]></content>
  </entry>
  
</feed>
