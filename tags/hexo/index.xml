<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hexo on Janrone‘s Site</title>
    <link>https://janrone.allone.top/tags/hexo/</link>
    <description>Recent content in Hexo on Janrone‘s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 10 May 2016 13:25:42 +0800</lastBuildDate><atom:link href="https://janrone.allone.top/tags/hexo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用Daocloud持续部署Hexo</title>
      <link>https://janrone.allone.top/posts/2016-05-10-%E5%88%A9%E7%94%A8daocloud%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2hexo/</link>
      <pubDate>Tue, 10 May 2016 13:25:42 +0800</pubDate>
      
      <guid>https://janrone.allone.top/posts/2016-05-10-%E5%88%A9%E7%94%A8daocloud%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2hexo/</guid>
      <description>Hexo安装    npm install -g hexo //安装完成后，进入到Hexo文件夹目录， 即会自动在目标文件夹建立网站所需要的所有文件。 hexo init //初始化 npm install //安装依赖包 hexo g //生成静态的网页 hexo s //开启本地服务，可以在本地预览 Hexo d //上传生产的文件到配置的服务仓库（见_config.yml）  官方文档：https://hexo.io/docs/
同时部署到Coding和Github平台    Coding Pages    Coding Pages 是一个免费的静态网页托管和演示服务。
在Coding创建一个和你用户相同项目用来部署你的Hexo 。
同时在代码选项开启的你的 pages服务。分支填写master(这里的分支要和部署时的对应)。
用户 Pages 可以通过{user_name}.coding.me 形式的 URL 直接访问。
官方文档 https://coding.net/help/doc/pages/index.html
Github pages    同样Gtihub也提供了一个 Pages免费服务。 同样你在Github创建一个名为username.github.io的仓库 。用来部署你的Hexo代码。
官方文档 https://pages.github.com/
_config.yml配置    同时部署到2个平台，就要修改博客根目录下面的_config.yml文件中的deploy如下
deploy: type: git repo: github: &amp;lt;repository url&amp;gt;,[branch] coding: &amp;lt;repository url&amp;gt;,[branch]  Daocloud 自动构建    项目主页：http://daocloud.</description>
    </item>
    
  </channel>
</rss>
